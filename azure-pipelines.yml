# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'


variables:
  buildConfiguration: 'Release'

jobs:
- job: BuildAndTest
  steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      publishWebProjects: false
      configuration: $(buildConfiguration)
      projects: 'Products.Api.sln'

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      publishTestResults: true
      arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

#  - task: PublishCodeCoverageResults@1
#    displayName: 'Publish code coverage results'
#    condition: succeededOrFailed()
#    inputs:
#      codeCoverageTool: 'Cobertura'
#      summaryFileLocation: '**/*coverage.cobertura.xml'

#  - task: DotNetCoreCLI@2
#    displayName: 'dotnet test'
#    inputs:
#      command: 'test'
#      arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
#      publishTestResults: true
#      projects: '**/*Tests/*.csproj'

  - task: PublishCodeCoverageResults@2
    displayName: 'Publish code coverage report'
    inputs:
      summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'


